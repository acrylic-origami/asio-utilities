/**
 * API Overview
 *
 * id() - Take an Awaitable and return it unmodified
 * wrap() - Await an Awaitable and wrap it in a ResultOrExceptionWrapper
 * call() - Call a function which returns an awaitable, and return that
 * val() - A static value, yielded from an Awaitable immediately
 *
 * later() - Empty Awaitable which will schedule at lower priority
 * usleep() - Empty Awaitable which will yield in $usecs microseconds
 *
 * The remaining methods are named according to a matrix of their attributes:
 *
 * First, how they take and return arguments according to types:
 *   v - Vector
 *   m - Map
 *   va - Variadic args, Array return value
 *
 * Next, methods which use a factory function to produce Awaitables
 *   are denoted with a 'c'
 *
 * Next, methods which wrap their results in a ResultOrExceptionWrapper
 *   are denoted with a 'w'
 *
 * This yields 12 methods:
 *   v(),  vc(),  vw(),  vcw(),
 *   m(),  mc(),  mw(),  mcw(),
 *   va(), vac(), vaw(), vacw(),
 *
 * Separately from the above matrix, There exists a set of filter/map methods
 *   for each container type which focus on the test function itself being
 *   an awaitable.
 *
 * First comes the container type, which excludes Variadics
 *   'v' - Vector
 *   'm' - Map
 *
 * Next, the operation type:
 *   'f' - Filter
 *   'm' - Map
 *
 * Finally, an optional 'k' modifier to indicate callback takes a key as well
 *
 * This yields 8 methods:
 *   vf(), vfk(), vm(), vmk(),
 *   mf(), mfk(), mm(), mmk(),
 *
 * Callbacks to these methods are of the form:
 *   *f()  - (function <Tv>(Tv): Awaitable<bool>)
 *   *fk() - (function <Tk, Tv>(Tk, Tv): Awaitable<bool>)
 *   *m()  - (function <Tv, Tr>(Tv): Awaitable<Tr>)
 *   *mk() - (function <Tk, Tv, Tr>(Tk, Tv): Awaitable<Tr>)
 */
